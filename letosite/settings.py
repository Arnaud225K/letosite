"""
Django settings for letosite project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from decouple import config
import getpass

from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/


# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = config('SECRET_KEY_LOCAL')

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = config('DEBUG_LOCAL', cast=bool)

# ALLOWED_HOSTS = ['localhost', '127.0.0.1']

SITE_NAME = 'Лето-Москва'
VERSION_NAME = '1.0 от 01.03.25'
START_YEAR = '2025'
USER_NAME = getpass.getuser()
PROJECT_NAME = 'letosite'

MAIN_DOMAIN_PARTS = 2

CART_ITEM_MAX_QUANTITY = 1000

UNCATEGORIZED_CATEGORY_ID = '2'

DEFAULT_REPORT_LOOKBACK_MINUTES = 12

DEFAULT_REPORT_INITIAL_LOOKBACK_HOURS = 1

VALID_SIMILAR_CATEGORY_TYPE_IDS = ['6', '7', '8']

VALID_ASSIGN_CATEGORY_TYPE_IDS = ['7', '8']

FEED_SKU_PARAM_NAME = 'sku'


DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000 

DEFAULT_ADMIN_IMAGE_PLACEHOLDER = 'img/images/default_image.webp'


#Bitrix setup
# BITRIX24_API_LOGIN = ''
# BITRIX24_API_PASSWORD = ''
# BITRIX24_API_MAIN_USER_NAME = ''


DATABASE_HOST = 'localhost'

#contact session key for utm setup
CONTACTS_SESSION_KEY = 'contacts_clid'

# SESSION_COOKIE_AGE = 60 * 60 * 24 * 180 # 6 Months 
# # SESSION_COOKIE_AGE = 60 * 60 * 24 * 30  # 30 Days


# Settings Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='localhost')
EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)


SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    #Custom App
    'jazzmin',
    'django_celery_results',
    'django_celery_beat',
    'django_select2',
    #End
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Enable redirects and sites
    # 'django.contrib.sites',
    # 'django.contrib.redirects',
    #humanize
    'django.contrib.humanize',
    #Custom Librairy
    # 'import_export',
    'django_ckeditor_5',
    'rangefilter',
    'django_cleanup.apps.CleanupConfig',
    #Custom APPS
    'project_settings',
    'filials',
    'menu',
    'static_text',
    'checkout',
    'uslugi',
    'promo',
    # 'services',
    # 'import_image',
    # 'favorite',
    'search',
    'admin_m',
    # 'sitemap_gen',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'letosite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #Custom CONSTEXT PROCESSORS
                PROJECT_NAME + ".views.global_views",
                PROJECT_NAME + ".views.cart_context",
                # PROJECT_NAME + ".views.menu_global_view",
                'utils.breadcrumbs.breadcrumbs',
                # 'static_text.views.static_text',
            ],
        },
    },
]

WSGI_APPLICATION = 'letosite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'HOST': config('DB_HOST', default=''),
#         'USER': config('DB_USER', default=''),
#         'PASSWORD': config('DB_PASSWORD', default=''),
#         'NAME': config('DB_NAME', default=''),
#         'PORT': '3306', 
#         'CONN_MAX_AGE': 60 * 10,  # 10 min
# 		'OPTIONS': {
# 			'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
# 			'charset': 'utf8mb4',
# 		}
#     },
# }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'Asia/Yekaterinburg'
# TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True

USE_L10N = True

# DECIMAL_SEPARATOR = '.' 
# THOUSAND_SEPARATOR = ' '
# USE_THOUSAND_SEPARATOR = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

WWW_ROOT ='www/'



MEDIA_ROOT = os.path.join(BASE_DIR, "www/media/")

STATIC_ROOT = os.path.join(BASE_DIR, "www/static/")


STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

X_FRAME_OPTIONS = 'SAMEORIGIN'
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


JAZZMIN_SETTINGS = {
    # 'site_logo': "img/logo/leto-logo.png",
    'site_logo': "img/logo/logo-letomoskva.png",    
    "welcome_sign": "Добро пожаловать|Лето-Москва",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "img/logo/leto-logo.png",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": None,

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle_n",

    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": "img/logo/leto-logo.png",

    "topmenu_links": [
        {"name": "Категория", "url": "/panadmin/menu/menucatalog/?type_menu__id__exact=6"},
        {"name": "Категория с продуктами", "url": "/panadmin/menu/menucatalog/?type_menu__id__exact=7"},
        {"name": "Неразнесенные товары", "url": "/panadmin/menu/product/?category_status=uncategorized"},
        {"name": "Разнесенные товары", "url": "/panadmin/menu/product/?category_status=categorized"},
        {"name": "Экспорт", "url": "/admin_m/product-export/"},
        {"name": "Импорт", "url": "/admin_m/product-import/"},
    ],

    "order_with_respect_to": [
        "menu",
        "checkout",
        "uslugi",
        "promo",
        "static_text",
        "admin",
        "auth",
        "project_settings",
        "filials",
        "search",
        "django_celery_beat",
        "django_celery_results",

    ],
    
    "icons": {
        "menu.MenuCatalog": "fas fa-bars",
        "menu.Product": "fas fa-th",
        "menu.TypeMenu": "fas fa-bars",
        "menu.FeedLink": "fas fa-rss",
        "filials.Filials": "fas fa-building",
        "admin.LogEntry": "fas fa-file",
        "static_text.StaticText": "fas fa-font",
        "project_settings.ProjectSettings": "fas fa-cogs",
        "django_celery_beat.crontabschedule": "fas fa-star",
        "django_celery_beat.solarschedule": "fas fa-globe",
        "django_celery_beat.clockedschedule": "fas fa-clock",
        "django_celery_beat.intervalschedule": "fas fa-stopwatch",
        "django_celery_beat.periodictask": "fas fa-sync",
        "auth.user": "fas fa-user",
        "auth.group": "fas fa-user-shield",
        "checkout.Order": "fas fa-shopping-cart",
        "checkout.Zakaz": "fas fa-file-alt",
        "menu.FilterValue": "fas fa-sliders-h",
        "menu.FilterCategory": "fas fa-tags",
        "uslugi.Uslugi":"fas fa-industry",
        "promo.Promo":"fas fa-gift",
        "search.SearchTerm":"fas fa-search",
        "search.SearchRemove":"fas fa-exclamation-triangle",
        "search.SearchChange":"fas fa-exchange-alt",
    },
    "show_ui_builder" : False
}


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": True,
    "brand_small_text": False,
    "brand_colour": "navbar-dark",
    "accent": "accent-navy",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-success",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "spacelab",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    }
}

#Custom color Palette
customColorPalette = [
        {
            'color': 'hsl(4, 90%, 58%)',
            'label': 'Red'
        },
        {
            'color': 'hsl(340, 82%, 52%)',
            'label': 'Pink'
        },
        {
            'color': 'hsl(291, 64%, 42%)',
            'label': 'Purple'
        },
        {
            'color': 'hsl(262, 52%, 47%)',
            'label': 'Deep Purple'
        },
        {
            'color': 'hsl(231, 48%, 48%)',
            'label': 'Indigo'
        },
        {
            'color': 'hsl(207, 90%, 54%)',
            'label': 'Blue'
        },
    ]

# CKEDITOR_5_CUSTOM_CSS = 'path_to.css' # optional
# CKEDITOR_5_FILE_STORAGE = "path_to_storage.CustomStorage" # optional
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],
    },
    'extends': {
        "language": "ru",
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
        'code','subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|',  'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                    'insertTable',],
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side',  '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': [ 'tableColumn', 'tableRow', 'mergeTableCells',
            'tableProperties', 'tableCellProperties' ],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading' : {
            'options': [
                { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
            ]
        },
        "htmlSupport": {
            "allow": [
                {"name": "/.*/", "attributes": True, "classes": True, "styles": True}
            ],
        },
    },
    'list': {
        'properties': {
            'styles': 'true',
            'startIndex': 'true',
            'reversed': 'true',
        }
    }
}


CKEDITOR_5_FILE_STORAGE = 'utils.utils.CkeditorCustomStorage'


try:
    from .local_settings import *
except ImportError:
    from .prod_settings import *


#debug toolbar configuration 
if DEBUG:
    INSTALLED_APPS += [
        'debug_toolbar',
    ]
    MIDDLEWARE += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]
    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.logging.LoggingPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
        'debug_toolbar.panels.profiling.ProfilingPanel',
    ]
    INTERNAL_IPS = ('127.0.0.1',)



#Celery result
CELERY_RESULT_BACKEND = 'django-db'
# # pick which cache from the CACHES setting.
# CELERY_CACHE_BACKEND = 'default'

CELERY_RESULT_EXTENDED = True

CELERY_BROKER_URL = 'redis://localhost:6379/0' 
# CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Yekaterinburg'



# --- Config Import-Export
IMPORT_EXPORT_USE_TRANSACTIONS = True
IMPORT_EXPORT_SKIP_UNCHANGED = True
IMPORT_EXPORT_REPORT_SKIPPED = True



#Yookassa
YOOKASSA_SECRET_KEY = config('YOOKASSA_SECRET_KEY', default='')
YOOKASSA_SHOP_ID = config('YOOKASSA_SHOP_ID', default='')


# # URLs for YooKassa redirects
# YOOKASSA_RETURN_URL = 'https://mysite.kz/checkout/yookassa/return/' # redirect after paiement
# YOOKASSA_WEBHOOK_URL = 'https://mysite.kz/checkout/yookassa/webhook/' # for notifications

YOOKASSA_RETURN_URL = 'http://127.0.0.1:8000/checkout/yookassa/return/' # redirect after paiement
YOOKASSA_WEBHOOK_URL = 'http://127.0.0.1:8000/checkout/yookassa/webhook/' # for notifications

# if not YOOKASSA_SHOP_ID or not YOOKASSA_SECRET_KEY:
#     print("ATTENTION: Les clés API YooKassa ne sont pas définies dans les variables d'environnement!")


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='localhost')
EMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)


MARKETING_ANALYST_EMAIL = 'kouakanarnaud@gmail.com'

